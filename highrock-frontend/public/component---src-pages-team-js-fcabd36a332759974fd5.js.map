{"version":3,"sources":["webpack:///./src/components/Intro.js","webpack:///./src/components/Title.js","webpack:///./src/components/TeamMember.js","webpack:///./src/components/Teams.js","webpack:///./src/pages/team.js"],"names":["Intro","intro","data","useState","slideEffect","setSlide","useEffect","runSlide","timer1","setTimeout","clearTimeout","className","subTitle","title","description","Title","TeamMember","name","position","teaser","image","slug","index","activeValue","listOutAll","deepLink","article","whileHover","scale","whileTap","to","Teams","team","showLink","list","React","value","setValue","map","item","key","id","onClick","query","TeamPage","allStrapiTeams","nodes","teamIntro","strapiIntroTeam","slide"],"mappings":"8FAAA,yBAwBeA,IAtBD,SAAC,GAAY,IACjBC,EADgB,EAAVC,KAAU,EAEUC,oBAAS,GAAlCC,EAFe,KAEFC,EAFE,KAItBC,qBAAU,WACNC,MACF,IAEF,IAAMA,EAAW,WACb,IAAIC,EAASC,YAAW,kBAAMJ,GAAS,KAAQ,KAC/C,OAAO,WACHK,aAAaF,KAIrB,OAAO,4BAAQG,UAAS,yCAA0CP,GAAe,mBACzE,wBAAIO,UAAU,YAAYV,EAAMW,UAChC,wBAAID,UAAU,SAASV,EAAMY,OAC7B,uBAAGF,UAAU,eAAeV,EAAMa,gB,kCCpB9C,yBAQeC,IAND,SAAC,GAAa,IAAZF,EAAW,EAAXA,MACd,OAAO,yBAAKF,UAAU,iBACpB,4BAAKE,GAAS,oB,+HCgCHG,EA9BI,SAAC,GAA6E,IAA5EC,EAA2E,EAA3EA,KAAKC,EAAsE,EAAtEA,SAAeC,GAAuD,EAA7DC,MAA6D,EAAvDD,QAAOE,EAAgD,EAAhDA,KAAKC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,YAAYC,EAAyB,EAAzBA,WAAWC,EAAc,EAAdA,SAChF,OAAGF,IAAgBD,GAASE,GAAcC,EACjC,kBAAC,IAAOC,QAAR,CAAgBC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAAOjB,UAAU,aACxF,kBAAC,IAAD,CAAMmB,GAAE,QAAUT,GAId,yBAAKV,UAAU,eAGf,yBAAKA,UAAU,kBACb,4BAAKM,GACL,4BAAKC,GACL,uBAAGP,UAAU,aAAaQ,MAKzB,MCgBIY,IAnCD,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAKnB,EAAyB,EAAzBA,MAAMoB,EAAmB,EAAnBA,SAASC,EAAU,EAAVA,KAAU,EAClBC,IAAMhC,SAAS,GAAlCiC,EADqC,KAC9BC,EAD8B,KAE5C,OACE,6BAAS1B,UAAU,gCACjB,yBAAKA,UAAU,gBACb,kBAACI,EAAA,EAAD,CAAOF,MAAOA,KAEhB,yBAAKF,UAAU,iBAEVuB,GACD,yBAAKvB,UAAU,iBACZqB,EAAKM,KAAI,SAACC,EAAMjB,GACf,OAAO,4BACPX,UAAS,aAAcW,IAAUc,GAAS,cAC1CI,IAAKD,EAAKE,GACVC,QAAS,kBAAKL,EAASf,KAEpBiB,EAAKtB,UAKXe,EAAKM,KAAI,SAACC,EAAMjB,GACf,OAAO,kBAAC,EAAD,eAAYC,YAAaa,EAAOI,IAAKD,EAAKE,GAAInB,MAAOA,GAAWU,EAAKV,GAArE,CAA6EE,WAAYU,SAGpGD,GACF,kBAAC,IAAD,CAAMH,GAAG,QAAQnB,UAAU,kBAA3B,e,kCChCN,0GA+BagC,EAAK,aA0BHC,UAnDE,SAAC,GAKX,IAAD,IAJJ1C,KAC2B8B,EAGvB,EAHFa,eAAkBC,MAIdC,EADF,EAFFC,gBAIF,OACA,kBAAC,IAAD,KACE,yBAAKrC,UAAU,aACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAOT,KAAM6C,EAAWE,OAAK,KAE/B,6BACA,yBAAKtC,UAAU,sBACb,6BAASA,UAAU,yBACjB,kBAAC,IAAD,CAAOqB,KAAMA,EAAMnB,MAAM,iBAAiBqB,MAAI,EAACT,UAAQ","file":"component---src-pages-team-js-fcabd36a332759974fd5.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nconst Intro = ({data}) => {\n    const intro = data;\n    const [slideEffect, setSlide] = useState(true);\n\n    useEffect(() => {\n        runSlide();\n    },[]);\n    \n    const runSlide = () => {\n        let timer1 = setTimeout(() => setSlide(false), 400);\n        return () => {\n            clearTimeout(timer1);\n        }\n    };\n\n    return <header className={`intro section-centre section-padding ${slideEffect && 'intro-slide-in'}`}>\n            <h4 className=\"subTitle\">{intro.subTitle}</h4>\n            <h1 className=\"title\">{intro.title}</h1>\n            <p className=\"description\">{intro.description}</p>\n    </header>\n}\n\nexport default Intro","import React from \"react\"\n\nconst Title = ({title}) => {\n  return <div className=\"section-title\">\n    <h2>{title || 'default-title'}</h2>\n  </div>\n}\n\nexport default Title\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { motion } from \"framer-motion\";\n\nconst TeamMember = ({name,position,image,teaser,slug,index,activeValue,listOutAll,deepLink}) => {\n  if(activeValue === index || listOutAll || deepLink){\n    return <motion.article whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} className=\"team-info\">\n    <Link to={`team/${slug}`}>\n        {/* {image && (\n          <Image fluid={image.childImageSharp.fluid}/>\n        )} */}\n        <div className=\"team-image\">\n\n        </div>\n        <div className=\"team-info-text\">\n          <h3>{name}</h3>\n          <h4>{position}</h4>\n          <p className=\"team-desc\">{teaser}</p>\n        </div>\n     </Link>\n    </motion.article>\n  }else{\n    return null;\n  }\n};\n\nTeamMember.propTypes = {\n  name:PropTypes.string.isRequired,\n  position:PropTypes.string.isRequired,\n  description:PropTypes.string.isRequired,\n  teaser:PropTypes.string.isRequired,\n  slug:PropTypes.string.isRequired\n}\n\nexport default TeamMember;\n","import React from \"react\"\nimport Title from \"./Title\"\nimport TeamMember from \"./TeamMember\"\nimport { Link } from \"gatsby\"\n\nconst Teams = ({team,title,showLink,list}) => {\n  const [value, setValue] = React.useState(0);\n  return (\n    <section className=\"section teams section-center\">\n      <div className=\"title-margin\">\n        <Title title={title}/>\n      </div>\n      <div className=\"teams-center\">\n        {\n          !list &&\n          <div className=\"btn-container\">\n            {team.map((item, index)=>{\n              return <button \n              className={`team-btn ${index === value && 'active-btn'}`} \n              key={item.id}\n              onClick={()=> setValue(index)}\n              >\n                {item.name}\n              </button>\n            })}\n          </div>\n        }\n          {team.map((item, index)=>{\n            return <TeamMember activeValue={value} key={item.id} index={index} {...team[index]} listOutAll={list}/>\n          })}\n      </div>\n      { showLink &&\n      <Link to=\"/team\" className=\"btn center-btn\">\n        All team\n      </Link>\n      }\n    </section>\n  );\n};\n\nexport default Teams;\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Teams from \"../components/Teams\"\nimport Intro from \"../components/Intro\"\n\nconst TeamPage = ({\n  data: {\n    allStrapiTeams: { nodes: team },\n    strapiIntroTeam\n  },\n}) => {\n  const teamIntro = strapiIntroTeam;\n  return (\n  <Layout>\n    <div className=\"team-page\">\n      <div className=\"section-center-narrow\">\n        <Intro data={teamIntro} slide/>\n      </div>\n      <div>\n      <div className=\"section-color-gray\">\n        <section className=\"section-center-narrow\">\n          <Teams team={team} title=\"Meet your team\" list deepLink/>\n        </section>\n      </div>\n      </div>\n    </div>\n  </Layout>\n  );\n}\n\nexport const query = graphql`\n{\n  allStrapiTeams {\n    nodes {\n      id\n      name\n      position\n      teaser\n      slug\n      image {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n  strapiIntroTeam {\n    title\n    subTitle\n    description\n  }\n}\n`\n\nexport default TeamPage\n"],"sourceRoot":""}